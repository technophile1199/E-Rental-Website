{"version":3,"sources":["../src/ngx-siema/siema.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,KAAA,EAAO,MAAA,EAAQ,YAAA,EAA+C,MAAO,eAAA,CAAgB;AAGzG,OAAO,KAAA,MAAW,OAAA,CAAQ;AAE1B,OAAO,EAAE,eAAA,EAAgB,MAAO,iBAAA,CAAkB;AAgBlD;IAAA;IAmBA,CAAC;IAAD,6BAAC;AAAD,CAnBA,AAmBC;;AAlBM,iCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,iBAAiB;gBAC3B,MAAM,EAAE;oBACN,wDAIC;iBACF;gBACD,QAAQ,EAAE,qCAET;aACF,EAAG,EAAE;CACL,CAAC;AAEK,qCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AAIF;IA4BE,2BAAoB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;QAxBnD,SAAI,GAAG,IAAI,YAAY,EAAO,CAAC;QAC/B,SAAI,GAAG,IAAI,YAAY,EAAO,CAAC;QAC/B,SAAI,GAAG,IAAI,YAAY,EAAO,CAAC;QAC/B,WAAM,GAAG,IAAI,YAAY,EAAO,CAAC;QACjC,WAAM,GAAG,IAAI,YAAY,EAAO,CAAC;QACjC,YAAO,GAAG,IAAI,YAAY,EAAO,CAAC;QAClC,WAAM,GAAG,IAAI,YAAY,EAAO,CAAC;QACjC,YAAO,GAAG,IAAI,YAAY,EAAO,CAAC;QAClC,iBAAY,GAAG,IAAI,YAAY,EAAO,CAAC;IAgBgB,CAAC;IAEzD,2CAAe,GAAf;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC1C,CAAC;IAED,oCAAQ,GAAR;QAAA,iBAwJC;QAvJC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QAEvD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE;aAClD,SAAS,CAAC,UAAC,IAIX;YACC,EAAE,CAAC,CAAC,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAC1D,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;oBAC/B,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC;wBACb,QAAQ,EAAE,KAAI,CAAC,OAAO,CAAC,QAAQ;wBAC/B,YAAY,EAAE,KAAI,CAAC,QAAQ,CAAC,YAAY;qBACzC,CAAC,CAAC;oBACH,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,KAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,YAAY,EAAE,KAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,CAAC;gBACpG,CAAC,CAAC,CAAC;YACL,CAAC;QACH,CAAC,CAAC,CAAC;QAEL,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE;aAClD,SAAS,CAAC,UAAC,IAIX;YACC,EAAE,CAAC,CAAC,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAC1D,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;oBAC/B,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC;wBACb,QAAQ,EAAE,KAAI,CAAC,OAAO,CAAC,QAAQ;wBAC/B,YAAY,EAAE,KAAI,CAAC,QAAQ,CAAC,YAAY;qBACzC,CAAC,CAAC;oBACH,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,KAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,YAAY,EAAE,KAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,CAAC;gBACpG,CAAC,CAAC,CAAC;YACL,CAAC;QACH,CAAC,CAAC,CAAC;QAEL,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE;aAClD,SAAS,CAAC,UAAC,IAIX;YACC,EAAE,CAAC,CAAC,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAC1D,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;oBAC7B,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC;wBACb,QAAQ,EAAE,KAAI,CAAC,OAAO,CAAC,QAAQ;wBAC/B,YAAY,EAAE,KAAI,CAAC,QAAQ,CAAC,YAAY;qBACzC,CAAC,CAAC;oBACH,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,KAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,YAAY,EAAE,KAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,CAAC;gBACpG,CAAC,CAAC,CAAC;YACL,CAAC;QACH,CAAC,CAAC,CAAC;QAEL,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE;aACtD,SAAS,CAAC,UAAC,IAIX;YACC,EAAE,CAAC,CAAC,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAC1D,KAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE;oBAC/B,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC;wBACf,QAAQ,EAAE,KAAI,CAAC,OAAO,CAAC,QAAQ;wBAC/B,YAAY,EAAE,KAAI,CAAC,QAAQ,CAAC,YAAY;qBACzC,CAAC,CAAC;oBACH,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,KAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,YAAY,EAAE,KAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,CAAC;gBACpG,CAAC,CAAC,CAAC;YACL,CAAC;QACH,CAAC,CAAC,CAAC;QAEL,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE;aACtD,SAAS,CAAC,UAAC,IAKX;YACC,EAAE,CAAC,CAAC,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAC1D,KAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE;oBAC1C,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC;wBACf,QAAQ,EAAE,KAAI,CAAC,OAAO,CAAC,QAAQ;wBAC/B,YAAY,EAAE,KAAI,CAAC,QAAQ,CAAC,YAAY;qBACzC,CAAC,CAAC;oBACH,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,KAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,YAAY,EAAE,KAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,CAAC;gBACpG,CAAC,CAAC,CAAC;YACL,CAAC;QACH,CAAC,CAAC,CAAC;QAEL,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE;aACxD,SAAS,CAAC,UAAC,IAIX;YACC,EAAE,CAAC,CAAC,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAC1D,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE;oBAC/B,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC;wBAChB,QAAQ,EAAE,KAAI,CAAC,OAAO,CAAC,QAAQ;wBAC/B,YAAY,EAAE,KAAI,CAAC,QAAQ,CAAC,YAAY;qBACzC,CAAC,CAAC;oBACH,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,KAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,YAAY,EAAE,KAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,CAAC;gBACpG,CAAC,CAAC,CAAC;YACL,CAAC;QACH,CAAC,CAAC,CAAC;QAEL,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE;aACtD,SAAS,CAAC,UAAC,IAIX;YACC,EAAE,CAAC,CAAC,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAC1D,KAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE;oBAC9B,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC;wBACf,QAAQ,EAAE,KAAI,CAAC,OAAO,CAAC,QAAQ;wBAC/B,YAAY,EAAE,KAAI,CAAC,QAAQ,CAAC,YAAY;qBACzC,CAAC,CAAC;oBACH,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,KAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,YAAY,EAAE,KAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,CAAC;gBACpG,CAAC,CAAC,CAAC;YACL,CAAC;QACH,CAAC,CAAC,CAAC;QAEL,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE;aACxD,SAAS,CAAC,UAAC,IAIX;YACC,EAAE,CAAC,CAAC,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAC1D,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE;oBACxC,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC;wBAChB,QAAQ,EAAE,KAAI,CAAC,OAAO,CAAC,QAAQ;qBAChC,CAAC,CAAC;oBACH,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,KAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;gBAC1D,CAAC,CAAC,CAAC;YACL,CAAC;QACH,CAAC,CAAC,CAAC;QAEL,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,EAAE;aAClE,SAAS,CAAC,UAAC,IAGX;YACC,EAAE,CAAC,CAAC,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAC1D,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC;oBACrB,QAAQ,EAAE,KAAI,CAAC,OAAO,CAAC,QAAQ;oBAC/B,YAAY,EAAE,KAAI,CAAC,QAAQ,CAAC,YAAY;iBACzC,CAAC,CAAC;gBACH,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,KAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,YAAY,EAAE,KAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,CAAC;YACpG,CAAC;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,uCAAW,GAAX;QAAA,iBAiBC;QAhBC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAClB,UAAU,CAAC;gBACT,KAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;gBACxB,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACvB,CAAC,CAAC,CAAC;QACL,CAAC;QAED,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;QACpC,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;QACpC,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;QACtC,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;QACtC,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC;QACvC,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;QACtC,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC;QACvC,IAAI,CAAC,wBAAwB,CAAC,WAAW,EAAE,CAAC;IAC9C,CAAC;IAED,kCAAM,GAAN,UAAO,OAAmB;QAAnB,wBAAA,EAAA,WAAmB;QACxB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;YACzC,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,YAAY;SACzC,CAAC,CAAC,CAAC;IACN,CAAC;IAED,kCAAM,GAAN,UAAO,OAAmB;QAAnB,wBAAA,EAAA,WAAmB;QACxB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;YACzC,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,YAAY;SACzC,CAAC,CAAC,CAAC;IACN,CAAC;IAED,kCAAM,GAAN,UAAO,KAAa;QAClB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;YACvC,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,YAAY;SACzC,CAAC,CAAC,CAAC;IACN,CAAC;IAED,oCAAQ,GAAR,UAAS,KAAa;QACpB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YAC3C,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,YAAY;SACzC,CAAC,CAAC,CAAC;IACN,CAAC;IAED,oCAAQ,GAAR,UAAS,IAAS,EAAE,KAAa;QAC/B,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YACjD,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,YAAY;SACzC,CAAC,CAAC,CAAC;IACN,CAAC;IAED,qCAAS,GAAT,UAAU,IAAS;QACjB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;YAC5C,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,YAAY;SACzC,CAAC,CAAC,CAAC;IACN,CAAC;IAED,oCAAQ,GAAR,UAAS,IAAS;QAChB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YAC1C,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,YAAY;SACzC,CAAC,CAAC,CAAC;IACN,CAAC;IAED,qCAAS,GAAT,UAAU,aAA8B;QAA9B,8BAAA,EAAA,qBAA8B;QACtC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;YACrD,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,YAAY;SACzC,CAAC,CAAC,CAAC;IACN,CAAC;IAED,0CAAc,GAAd;QACE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;YACrB,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,YAAY;SACzC,CAAC,CAAC;IACL,CAAC;IAEO,4CAAgB,GAAxB,UAAyB,QAAgB;QACvC,MAAM,CAAC,CAAC,QAAQ,IAAI,QAAQ,KAAK,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;IACzD,CAAC;IA2BH,wBAAC;AAAD,CAlSA,AAkSC;;AA1BM,4BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,WAAW;gBACrB,QAAQ,EAAE,kHAIT;aACF,EAAG,EAAE;CACL,CAAC;AAEK,gCAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,eAAe,GAAG;CACxB,EAF6F,CAE7F,CAAC;AACK,gCAAc,GAA2C;IAChE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC7B,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;IAC3B,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;IAC3B,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;IAC3B,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;IAC7B,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;IAC7B,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;IAC9B,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;IAC7B,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;IAC9B,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;CAClC,CAAC","file":"siema.component.js","sourceRoot":"","sourcesContent":["import { Component, Input, Output, EventEmitter, AfterViewInit, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport Siema from 'siema';\n\nimport { NgxSiemaService } from './siema.service';\n\nexport interface NgxSiemaOptions {\n  selector: string;\n  duration?: number;\n  easing?: string;\n  perPage?: any;\n  startIndex?: number;\n  draggable?: boolean;\n  threshold?: number;\n  loop?: boolean;\n  onInit?: Function;\n  onChange?: Function;\n}\n\n\nexport class NgxSiemaSlideComponent {\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ngx-siema-slide',\n  styles: [\n    `\n      :host {\n        display: flex;\n      }\n    `,\n  ],\n  template: `\n    <ng-content></ng-content>\n  `,\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n\nexport class NgxSiemaComponent implements AfterViewInit, OnInit, OnDestroy {\n\n   options: NgxSiemaOptions;\n\n   next = new EventEmitter<any>();\n   prev = new EventEmitter<any>();\n   goTo = new EventEmitter<any>();\n   remove = new EventEmitter<any>();\n   insert = new EventEmitter<any>();\n   prepend = new EventEmitter<any>();\n   append = new EventEmitter<any>();\n   destroy = new EventEmitter<any>();\n   currentSlide = new EventEmitter<any>();\n\n  ngxClass: string;\n\n  private instance: any;\n\n  private nextSubscription: Subscription;\n  private prevSubscription: Subscription;\n  private goToSubscription: Subscription;\n  private removeSubscription: Subscription;\n  private insertSubscription: Subscription;\n  private prependSubscription: Subscription;\n  private appendSubscription: Subscription;\n  private destroySubscription: Subscription;\n  private currentSlideSubscription: Subscription;\n\n  constructor(private ngxSiemaService: NgxSiemaService) { }\n\n  ngAfterViewInit() {\n    this.instance = new Siema(this.options);\n  }\n\n  ngOnInit() {\n    this.ngxClass = this.options.selector.replace('.', '');\n\n    this.nextSubscription = this.ngxSiemaService.onNext()\n      .subscribe((data: {\n        selector: string,\n        numbers: number,\n        listener: BehaviorSubject<{ selector: string, currentSlide: number }>,\n      }) => {\n        if (this.compareSelectors(data.selector) && this.instance) {\n          this.instance.next(data.numbers, () => {\n            this.next.emit({\n              selector: this.options.selector,\n              currentSlide: this.instance.currentSlide,\n            });\n            data.listener.next({ selector: this.options.selector, currentSlide: this.instance.currentSlide });\n          });\n        }\n      });\n\n    this.prevSubscription = this.ngxSiemaService.onPrev()\n      .subscribe((data: {\n        selector: string,\n        numbers: number,\n        listener: BehaviorSubject<{ selector: string, currentSlide: number }>,\n      }) => {\n        if (this.compareSelectors(data.selector) && this.instance) {\n          this.instance.prev(data.numbers, () => {\n            this.prev.emit({\n              selector: this.options.selector,\n              currentSlide: this.instance.currentSlide,\n            });\n            data.listener.next({ selector: this.options.selector, currentSlide: this.instance.currentSlide });\n          });\n        }\n      });\n\n    this.goToSubscription = this.ngxSiemaService.onGoTo()\n      .subscribe((data: {\n        selector: string,\n        index: number,\n        listener: BehaviorSubject<{ selector: string, currentSlide: number }>,\n      }) => {\n        if (this.compareSelectors(data.selector) && this.instance) {\n          this.instance.goTo(data.index, () => {\n            this.goTo.emit({\n              selector: this.options.selector,\n              currentSlide: this.instance.currentSlide,\n            });\n            data.listener.next({ selector: this.options.selector, currentSlide: this.instance.currentSlide });\n          });\n        }\n      });\n\n    this.removeSubscription = this.ngxSiemaService.onRemove()\n      .subscribe((data: {\n        selector: string,\n        index: number,\n        listener: BehaviorSubject<{ selector: string, currentSlide: number }>,\n      }) => {\n        if (this.compareSelectors(data.selector) && this.instance) {\n          this.instance.remove(data.index, () => {\n            this.remove.emit({\n              selector: this.options.selector,\n              currentSlide: this.instance.currentSlide,\n            });\n            data.listener.next({ selector: this.options.selector, currentSlide: this.instance.currentSlide });\n          });\n        }\n      });\n\n    this.insertSubscription = this.ngxSiemaService.onInsert()\n      .subscribe((data: {\n        selector: string,\n        item: any,\n        index: number,\n        listener: BehaviorSubject<{ selector: string, currentSlide: number }>,\n      }) => {\n        if (this.compareSelectors(data.selector) && this.instance) {\n          this.instance.insert(data.item, data.index, () => {\n            this.insert.emit({\n              selector: this.options.selector,\n              currentSlide: this.instance.currentSlide,\n            });\n            data.listener.next({ selector: this.options.selector, currentSlide: this.instance.currentSlide });\n          });\n        }\n      });\n\n    this.prependSubscription = this.ngxSiemaService.onPrepend()\n      .subscribe((data: {\n        selector: string,\n        item: any,\n        listener: BehaviorSubject<{ selector: string, currentSlide: number }>,\n      }) => {\n        if (this.compareSelectors(data.selector) && this.instance) {\n          this.instance.prepend(data.item, () => {\n            this.prepend.emit({\n              selector: this.options.selector,\n              currentSlide: this.instance.currentSlide,\n            });\n            data.listener.next({ selector: this.options.selector, currentSlide: this.instance.currentSlide });\n          });\n        }\n      });\n\n    this.appendSubscription = this.ngxSiemaService.onAppend()\n      .subscribe((data: {\n        selector: string,\n        item: any,\n        listener: BehaviorSubject<{ selector: string, currentSlide: number }>,\n      }) => {\n        if (this.compareSelectors(data.selector) && this.instance) {\n          this.instance.append(data.item, () => {\n            this.append.emit({\n              selector: this.options.selector,\n              currentSlide: this.instance.currentSlide,\n            });\n            data.listener.next({ selector: this.options.selector, currentSlide: this.instance.currentSlide });\n          });\n        }\n      });\n\n    this.destroySubscription = this.ngxSiemaService.onDestroy()\n      .subscribe((data: {\n        selector: string,\n        restoreMarkup: boolean,\n        listener: BehaviorSubject<{ selector: string }>,\n      }) => {\n        if (this.compareSelectors(data.selector) && this.instance) {\n          this.instance.destroy(data.restoreMarkup, () => {\n            this.destroy.emit({\n              selector: this.options.selector,\n            });\n            data.listener.next({ selector: this.options.selector });\n          });\n        }\n      });\n\n    this.currentSlideSubscription = this.ngxSiemaService.onCurrentSlide()\n      .subscribe((data: {\n        selector: string,\n        listener: BehaviorSubject<{ selector: string, currentSlide: number }>,\n      }) => {\n        if (this.compareSelectors(data.selector) && this.instance) {\n          this.currentSlide.emit({\n            selector: this.options.selector,\n            currentSlide: this.instance.currentSlide,\n          });\n          data.listener.next({ selector: this.options.selector, currentSlide: this.instance.currentSlide });\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    if (this.instance) {\n      setTimeout(() => {\n        this.instance.destroy();\n        this.instance = null;\n      });\n    }\n\n    this.nextSubscription.unsubscribe();\n    this.prevSubscription.unsubscribe();\n    this.goToSubscription.unsubscribe();\n    this.removeSubscription.unsubscribe();\n    this.insertSubscription.unsubscribe();\n    this.prependSubscription.unsubscribe();\n    this.appendSubscription.unsubscribe();\n    this.destroySubscription.unsubscribe();\n    this.currentSlideSubscription.unsubscribe();\n  }\n\n  onNext(numbers: number = 1) {\n    this.instance.next(numbers, this.next.emit({\n      currentSlide: this.instance.currentSlide,\n    }));\n  }\n\n  onPrev(numbers: number = 1) {\n    this.instance.prev(numbers, this.next.emit({\n      currentSlide: this.instance.currentSlide,\n    }));\n  }\n\n  onGoTo(index: number) {\n    this.instance.goTo(index, this.goTo.emit({\n      currentSlide: this.instance.currentSlide,\n    }));\n  }\n\n  onRemove(index: number) {\n    this.instance.remove(index, this.remove.emit({\n      currentSlide: this.instance.currentSlide,\n    }));\n  }\n\n  onInsert(item: any, index: number) {\n    this.instance.insert(item, index, this.insert.emit({\n      currentSlide: this.instance.currentSlide,\n    }));\n  }\n\n  onPrepend(item: any) {\n    this.instance.prepend(item, this.prepend.emit({\n      currentSlide: this.instance.currentSlide,\n    }));\n  }\n\n  onAppend(item: any) {\n    this.instance.append(item, this.append.emit({\n      currentSlide: this.instance.currentSlide,\n    }));\n  }\n\n  onDestroy(restoreMarkup: boolean = false) {\n    this.instance.destroy(restoreMarkup, this.destroy.emit({\n      currentSlide: this.instance.currentSlide,\n    }));\n  }\n\n  onCurrentSlide() {\n    this.currentSlide.emit({\n      currentSlide: this.instance.currentSlide,\n    });\n  }\n\n  private compareSelectors(selector: string) {\n    return !selector || selector === this.options.selector;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ngx-siema',\n  template: `\n    <div class=\"{{ ngxClass }}\">\n      <ng-content select=\"ngx-siema-slide\"></ng-content>\n    </div>\n  `,\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgxSiemaService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'options': [{ type: Input },],\n'next': [{ type: Output },],\n'prev': [{ type: Output },],\n'goTo': [{ type: Output },],\n'remove': [{ type: Output },],\n'insert': [{ type: Output },],\n'prepend': [{ type: Output },],\n'append': [{ type: Output },],\n'destroy': [{ type: Output },],\n'currentSlide': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}